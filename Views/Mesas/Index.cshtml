@model IEnumerable<MesaListo.Models.Mesa>
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Mesas";
    var currentUserId = UserManager.GetUserId(User);
    var isAdmin = User.IsInRole("Admin");
    var isRestaurante = User.IsInRole("Restaurante");
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>
            <i class="fas fa-chair text-warning me-2"></i>Mesas
            <small class="text-muted fs-6">(@Model.Count() registros)</small>
        </h1>

        @if (User.IsInRole("Admin") || User.IsInRole("Restaurante"))
        {
            <a asp-action="Create" class="btn btn-warning">
                <i class="fas fa-plus me-2"></i>Nueva Mesa
            </a>
        }
    </div>

    <!-- Mensajes informativos -->
    @if (isAdmin)
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i>
            <strong>Vista de Administrador:</strong> Viendo todas las mesas del sistema.
        </div>
    }
    else if (isRestaurante)
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i>
            <strong>Vista de Restaurante:</strong> Viendo solo las mesas de sus restaurantes.
        </div>
    }

    @if (!Model.Any())
    {
        <div class="card shadow">
            <div class="card-body text-center py-5">
                <i class="fas fa-chair fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">No hay mesas registradas</h4>
                <p class="text-muted">@(isRestaurante ? "Comienza creando tu primera mesa." : "No se encontraron mesas.")</p>
                @if (User.IsInRole("Admin") || User.IsInRole("Restaurante"))
                {
                    <a asp-action="Create" class="btn btn-warning mt-2">
                        <i class="fas fa-plus me-2"></i>Crear Mesa
                    </a>
                }
            </div>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100 shadow-sm border-0">
                        <div class="card-header bg-warning text-white">
                            <h5 class="mb-0">
                                <i class="fas fa-chair me-2"></i>@item.Codigo
                                <span class="badge bg-light text-dark float-end">@item.Capacidad <i class="fas fa-user ms-1"></i></span>
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <h6 class="text-warning mb-1">
                                    <i class="fas fa-utensils me-2"></i>@item.Restaurante?.Nombre
                                </h6>
                                <small class="text-muted">
                                    <i class="fas fa-map-marker-alt me-1"></i>@item.Restaurante?.Direccion
                                </small>
                            </div>

                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div>
                                    <span class="badge @GetReservasBadgeClass(item.Reservas?.Count ?? 0)">
                                        @(item.Reservas?.Count(r => r.Estado != "Cancelada") ?? 0) reservas activas
                                    </span>
                                </div>
                                @if (isAdmin)
                                {
                                    <div>
                                        <small class="text-muted">
                                            Propietario: @item.Restaurante?.UsuarioId
                                        </small>
                                    </div>
                                }
                            </div>

                            <!-- Reservas próximas -->
                            @{
                                var proximaReserva = item.Reservas?
                                .Where(r => r.Estado == "Confirmada" && r.FechaHora >= DateTime.Now)
                                .OrderBy(r => r.FechaHora)
                                .FirstOrDefault();
                            }

                            @if (proximaReserva != null)
                            {
                                <div class="alert alert-success py-2 mb-0">
                                    <small>
                                        <i class="fas fa-clock me-1"></i>
                                        <strong>Próxima:</strong> @proximaReserva.FechaHora.ToString("dd/MM HH:mm")
                                    </small>
                                </div>
                            }
                        </div>
                        <div class="card-footer bg-transparent">
                            <div class="btn-group w-100">
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">
                                    <i class="fas fa-trash"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@functions {
    public string GetReservasBadgeClass(int count)
    {
        return count == 0 ? "bg-success" : "bg-warning";
    }
}